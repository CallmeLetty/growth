(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{279:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("纯C语言，苹果公司为多核的并行运算提出的解决方案")])]),t._v(" "),s("li",[s("p",[s("strong",[s("strong",[t._v("将任务添加到队列，并指定执行任务的函数")])])])]),t._v(" "),s("li",[s("p",[t._v("GCD会自动利用更多的cpu内核")])]),t._v(" "),s("li",[s("p",[t._v("GCD会自动管理线程的生命周期【创建线程、调度任务、销毁线程】")])]),t._v(" "),s("li",[s("p",[t._v("程序员只需要告诉GCD想要执行什么任务，不需要编写任何线程管理代码")])])]),t._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("任务使用block封装【无参数、无返回值】")])]),t._v(" "),s("li",[s("p",[t._v("异步函数"),s("code",[t._v("dispatch_async")])])])]),t._v(" "),s("p",[t._v("- 不会等待当前语句执行完毕，就可以执行下一条语句")]),t._v(" "),s("p",[t._v("- "),s("strong",[s("strong",[t._v("会")])]),t._v("开启线程执行block的任务")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("同步函数"),s("code",[t._v("dispatch_sync")])])]),t._v(" "),s("p",[t._v("- 必须等待当前语句执行完毕，才会执行下一条语句")]),t._v(" "),s("p",[t._v("- 不会开启线程")]),t._v(" "),s("ul",[s("li",[t._v("无论同步函数还是异步函数都是耗时操作")])]),t._v(" "),s("h2",{attrs:{id:"队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),s("p",[t._v("数据结构FIFO。")]),t._v(" "),s("p",[t._v("创建函数如下：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\n* @param label：附加到队列的字符串标签。可选参数，可能为NULL。\n\n＊\n\n* @param attr：一个预定义的属性。\n\n* 如DISPATCH_QUEUE_SERIAL，DISPATCH_QUEUE_CONCURRENT，\n\n* 或者调用dispatch_queue_attr_make_with_*函数的结果。\n\n* 若传NULL，则为DISPATCH_QUEUE_SERIAL\n\n*\n\n* @result：新创建的调度队列。\n\n*/")]),t._v("\n\ndispatch_queue_t\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_queue_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("_Nullable DISPATCH_UNSAFE_INDEXABLE label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                      dispatch_queue_attr_t _Nullable attr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("分类：")]),t._v(" "),s("ol",[s("li",[t._v("串行队列")])]),t._v(" "),s("p",[t._v("- 顺序执行")]),t._v(" "),s("p",[t._v("- 创建： "),s("code",[t._v('dispatch_queue_create("serial",DISPATCH_QUEUE_SERIAL)')])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("并发队列")])]),t._v(" "),s("p",[t._v("- 一次可以"),s("strong",[s("strong",[t._v("调度")])]),t._v("【非执行】多个任务")]),t._v(" "),s("p",[t._v("- 创建："),s("code",[t._v('dispatch_queue_create("concurrent",DISPATCH_QUEUE_CONCURRENT)')])]),t._v(" "),s("p"),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/00ba55c51c75429daa1d4d76f06722f6~tplv-k3u1fbpfcp-watermark.image",alt:""}})]),t._v(" "),s("p"),t._v(" "),s("h1",{attrs:{id:"函数与队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数与队列"}},[t._v("#")]),t._v(" 函数与队列")]),t._v(" "),s("p",[t._v("| 队列\\函数 | 同步函数 | 异步函数 |")]),t._v(" "),s("p",[t._v("| --- | --- | --- |")]),t._v(" "),s("p",[t._v("| 串行队列 | 不开启线程，在当前线程执行，任务一个接一个，使用不当会产生堵塞 | 不开启线程，在当前线程执行，任务一个接一个 |")]),t._v(" "),s("p",[t._v("| 并发队列 | 有开启线程的能力，任务一个接一个 | 开启线程，在当前线程执行，任务异步执行，没有顺序，与cpu调度有关 |")]),t._v(" "),s("ul",[s("li",[t._v("主队列")])]),t._v(" "),s("p",[t._v("- "),s("code",[t._v("dispatch_get_main_queue()")])]),t._v(" "),s("p",[t._v("- 专门用来在主线程上调度任务的"),s("strong",[s("strong",[t._v("串行队列")])])]),t._v(" "),s("p",[t._v("- 不会开启线程")]),t._v(" "),s("p",[t._v("- 如果当前主线程有任务执行，那么无论主队列中添加了什么任务，都不会被调度")]),t._v(" "),s("ul",[s("li",[t._v("全局并发队列")])]),t._v(" "),s("p",[t._v("- "),s("code",[t._v("dispatch_get_global_queue(0,0)")])]),t._v(" "),s("p",[t._v("- 使用多线程开发时，如果对队列没有特殊需求，在执行"),s("strong",[s("strong",[t._v("异步任务")])]),t._v("时，可以直接使用该队列")]),t._v(" "),s("p",[t._v("- 不建议使用全局并发队列，不利于业务剥离及调试")]),t._v(" "),s("ul",[s("li",[s("strong",[s("strong",[t._v("死锁")])]),t._v("：由于串行队列没有开辟线程的能力，在一个"),s("strong",[s("strong",[t._v("串行队列")])]),t._v("中"),s("strong",[s("strong",[t._v("同步")])]),t._v("添加block任务,导致本线程等待"),s("code",[t._v("dispatch_sync")]),t._v("函数执行完后处理block，而block等待本线程执行"),s("code",[t._v("dispatch_sync")]),t._v("函数结束，函数结束又需要block执行结束，导致相互等待，产生死锁")])]),t._v(" "),s("h2",{attrs:{id:"串行和并发的底层探究"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串行和并发的底层探究"}},[t._v("#")]),t._v(" 串行和并发的底层探究")]),t._v(" "),s("h3",{attrs:{id:"队列底层结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列底层结构"}},[t._v("#")]),t._v(" 队列底层结构")]),t._v(" "),s("p",[t._v("首先我们要知道"),s("code",[t._v("dispatch_queue_t")]),t._v("是什么，通过层层宏定义跳转可以直到"),s("code",[t._v("dispatch_queue_t")]),t._v(" 本质是"),s("code",[t._v("dispatch_queue_s")]),t._v("，根类为"),s("code",[t._v("dispatch_object_s")]),t._v(" （联合体，其中有"),s("code",[t._v("dispatch_queue_s")]),t._v("），以下只截取重点代码")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dispatch_queue_s结构体定义如下")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_queue_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DISPATCH_QUEUE_CLASS_HEADER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__dq_opaque1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("DISPATCH_QUEUE_CLASS_HEADER")]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __pointer_sized_field__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_DISPATCH_QUEUE_CLASS_HEADER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __pointer_sized_field__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" dq_serialnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dq_label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DISPATCH_UNION_LE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" dq_atomic_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" dq_width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" __dq_opaque2 \\\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_priority_t")]),t._v(" dq_priority"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_queue_specific_head_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dq_specific_head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_source_refs_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ds_refs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_timer_source_refs_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ds_timer_refs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_mach_recv_refs_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dm_recv_refs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_channel_callbacks_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dch_callbacks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" dq_sref_cnt\n\n")])])]),s("p",[t._v("队列分为串行和并发，下面通过libffi的源码来对其在"),s("strong",[s("strong",[t._v("创建")])]),t._v("和"),s("strong",[s("strong",[t._v("执行任务")])]),t._v("时期的底层实现做一个大致的了解和学习。")]),t._v(" "),s("h3",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),s("p",[t._v("创建queue都是通过"),s("code",[t._v('dispatch_queue_create("",attr)')]),t._v(" 方法，通过对attr传入的不同参数来区分串行和并发。"),s("code",[t._v("dispatch_queue_create")]),t._v(" 底层调用的是"),s("code",[t._v("_dispatch_lane_create_with_target")]),t._v("函数。下面主要探究该方法")]),t._v(" "),s("ol",[s("li",[t._v("规范化参数("),s("code",[t._v("qos")]),t._v(", "),s("code",[t._v("overcommit")]),t._v(", "),s("code",[t._v("tq")]),t._v(")【优先级处理，并发队列和串行队列的attribute处理】")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dqa就是我们创建时传入的attr，若为串行队列，则dqai为空结构体对象")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_queue_attr_info_t")]),t._v(" dqai "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_queue_attr_to_info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dqa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dispatch_queue_attr_info_s")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_queue_attr_info_s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_qos_t")]),t._v(" dqai_qos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("      dqai_relpri "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" dqai_overcommit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" dqai_autorelease_frequency"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" dqai_concurrent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint16_t")]),t._v(" dqai_inactive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_queue_attr_info_t")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("ol",[s("li",[t._v("初始化队列。")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首先可以看到最终返回的语句如下")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_trace_queue_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    \n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到dq对象初始化的地方")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 开辟一个dispatch_lane_s大小的内存，创建dispatch_lane_t对象")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_lane_t")]),t._v(" dq "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_object_alloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vtable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_lane_s")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    \n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 初始化该对象")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于这个初始化方法来说，第三个参数表示的是该队列的“宽度”。")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是并发，宽度为最大值，若为串行，宽度为1")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_queue_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n     dqf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n     dqai"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dqai_concurrent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" DISPATCH_QUEUE_WIDTH_MAX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n     DISPATCH_QUEUE_ROLE_INNER "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dqai"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dqai_inactive "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" DISPATCH_QUEUE_INACTIVE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p"),t._v(" "),s("h3",{attrs:{id:"执行任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行任务"}},[t._v("#")]),t._v(" 执行任务")]),t._v(" "),s("h2",{attrs:{id:"同步与异步的底层探究"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步与异步的底层探究"}},[t._v("#")]),t._v(" 同步与异步的底层探究")]),t._v(" "),s("p",[t._v("重点探究：两种函数Block什么时候调用")]),t._v(" "),s("h3",{attrs:{id:"dispatch-sync-同步函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-sync-同步函数"}},[t._v("#")]),t._v(" dispatch_sync 同步函数")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_queue_t")]),t._v(" dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_block_t")]),t._v(" work"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_sync_f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" work"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_Block_invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("work"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dc_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _dispatch_Block_invoke如下所示，也就是说要重点关注这个invoke什么时候调用")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("_dispatch_Block_invoke")]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_function_t")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block_layout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("bb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ol",[s("li",[t._v("上述"),s("code",[t._v("_dispatch_sync_f")]),t._v("的实现中，若为串行队列，会调用"),s("code",[t._v("_dispatch_barrier_sync_f")]),t._v(" ，在该方法中，通过层层跳转，核心执行代码如下")])]),t._v(" "),s("p"),t._v(" "),s("p",[t._v("```c")]),t._v(" "),s("p",[t._v("// 串行 + 同步")]),t._v(" "),s("p",[t._v("// 这里的func就是上面创建的dispatch_function_t对象")]),t._v(" "),s("p",[t._v("_dispatch_lane_barrier_sync_invoke_and_complete(dl,")]),t._v(" "),s("p",[t._v("ctxt,")]),t._v(" "),s("p",[t._v("func")]),t._v(" "),s("p",[t._v("DISPATCH_TRACE_ARG(_dispatch_trace_item_sync_push_pop(")]),t._v(" "),s("p",[t._v("dq, ctxt, func, dc_flags | DC_FLAG_BARRIER)));")]),t._v(" "),s("p"),t._v(" "),s("p",[t._v("// 上述函数的实现中，主要需要关注下方代码，可以看到是直接调用")]),t._v(" "),s("p",[t._v("_dispatch_client_callout(ctxt, func);")]),t._v(" "),s("p",[t._v("```")]),t._v(" "),s("p"),t._v(" "),s("p",[t._v("通过bt指令打印调用堆栈也可以验证")]),t._v(" "),s("p",[s("img",{attrs:{src:"%E3%80%90iOS%E5%BA%95%E5%B1%82%E6%8E%A2%E7%A9%B6%E3%80%91GCD%20d924fbca0730486583e94b3e759b2217/Untitled.png",alt:"Untitled"}})]),t._v(" "),s("ol",[s("li",[t._v("若为并发队列，会调用"),s("code",[t._v("_dispatch_sync_f_slow")])])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 封装context对象，存储func")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_sync_context_s")]),t._v(" dsc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n···\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dc_func     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _dispatch_async_and_wait_invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dc_ctxt     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("dsc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dc_priority "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" _PTHREAD_PRIORITY_ENFORCE_FLAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dsc_func    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n···\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 找到调用dsc和func相关的核心代码")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_sync_invoke_and_complete_recurse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("top_dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctxt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("top_dc_flags\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DISPATCH_TRACE_ARG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("dsc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际调用如下所示，可以看到是直接调用")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_client_callout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctxt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("通过bt指令打印调用堆栈也可以验证")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/096f1eaac5ba406d98dc2df9232fc0a3~tplv-k3u1fbpfcp-zoom-1.image",alt:"Untitled"}})]),t._v(" "),s("ul",[s("li",[t._v("综上所述，无论是串行队列还是并发队列，只要是同步函数，任务添加到队列中后就会直接调用")])]),t._v(" "),s("h3",{attrs:{id:"dispatch-async-异步函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-async-异步函数"}},[t._v("#")]),t._v(" dispatch_async 异步函数")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们需要重点关注的就是传入的参数work block什么时候调用")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_queue_t")]),t._v(" dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_block_t")]),t._v(" work"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_continuation_t")]),t._v(" dc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_continuation_alloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n···\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("dispatch_qos_t")]),t._v(" qos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_continuation_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" work"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dc_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dispatch_continuation_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("dc_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("在创建"),s("code",[t._v("dispatch_qos_t")]),t._v("对象的方法中，主要做了两件事：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("封装任务")])]),t._v(" "),s("li",[s("p",[t._v("优先级处理")])])]),t._v(" "),s("ul",[s("li",[t._v("为什么异步函数需要多这样一步呢？")])]),t._v(" "),s("p",[t._v("1. 异步调用可能会产生无序的情况，无序的情况意味着"),s("strong",[s("strong",[t._v("优先级")])]),t._v("在调用的时候是参考衡量的依据")]),t._v(" "),s("p",[t._v("2. 异步函数的回调必然也是异步的，所以我们需要将block保存起来，等待cpu的调度的时候再拿出来")]),t._v(" "),s("p"),t._v(" "),s("p"),t._v(" "),s("p"),t._v(" "),s("p",[t._v("继续探究"),s("code",[t._v("_dispatch_continuation_async")]),t._v("的实现，在其函数体中只需要关注如下这句")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dqu._dq：dispatch_queue_s队列，对应下面的x")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dc：上面第一句创建的dispatch_continuation_t对象，对应下面的y")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// qos：上面封装了任务和优先级的dispatch_qos_t对象，对应下面的z")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dx_push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dqu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_dq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("dx_push")]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dx_vtable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dq_push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n")])])]),s("p",[t._v("由于我们的任务是封装在"),s("code",[t._v("qos")]),t._v("中，所以对于"),s("code",[t._v("dx_vtable")]),t._v("不过多探究，其主要是对队列类型做一个判断，还是重点看看使用到"),s("code",[t._v("z")]),t._v(" （"),s("code",[t._v("qos")]),t._v("）的"),s("code",[t._v("dq_push")]),t._v(" 。在"),s("code",[t._v("libdispatch")]),t._v("的源码中对于不同的队列类型"),s("code",[t._v("dq_push")]),t._v("有不同的实现。")]),t._v(" "),s("p",[t._v("由于异步函数的调用是cpu调度的，所以在代码中可能很难直接找到调度的地方，我们可以bt一下然后倒推，以"),s("strong",[s("strong",[t._v("串行队列")])]),t._v("为例，如下图所示")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  YKOCDemo`__57"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AppDelegate application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("didFinishLaunchingWithOptions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_block_invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block_descriptor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0000000106e751f8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at AppDelegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  libdispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib`_dispatch_call_block_and_release "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  libdispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib`_dispatch_client_callout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  libdispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib`_dispatch_lane_serial_drain "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1064")]),t._v("\n\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  libdispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib`_dispatch_lane_invoke "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("441")]),t._v("\n\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  libdispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib`_dispatch_workloop_worker_thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("959")]),t._v("\n\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  libsystem_pthread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib`_pthread_wqthread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("326")]),t._v("\n\nframe #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  libsystem_pthread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib`start_wqthread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("_dispatch_workloop_worker_thread")]),t._v("函数的调度在"),s("code",[t._v("_dispatch_root_queues_init_once")]),t._v("函数中,通过"),s("code",[t._v("_dispatch_root_queues_init")]),t._v("的调度触发")]),t._v(" "),s("h1",{attrs:{id:"流程控制方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程控制方案"}},[t._v("#")]),t._v(" 流程控制方案")]),t._v(" "),s("h2",{attrs:{id:"栅栏函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栅栏函数"}},[t._v("#")]),t._v(" 栅栏函数")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前面的任务执行完毕才会来到这里")]),t._v("\n\ndispatch_barrier_async\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用同上。但是这个会堵塞线程，影响后面的任务执行")]),t._v("\n\ndispatch_barrier_sync\n\n")])])]),s("ul",[s("li",[s("p",[t._v("控制任务执行顺序，同步")])]),t._v(" "),s("li",[s("p",[t._v("栅栏函数只能控制 ** "),s("strong",[t._v("!同一个! !自定义的! !并发!")]),t._v(" ** 队列")])])]),t._v(" "),s("h2",{attrs:{id:"信号量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#信号量"}},[t._v("#")]),t._v(" 信号量")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建信号量，传入信号量的初始值")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("intptr_t value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n\n* \n\n等待信号量。\n\n* 如果信号量值为0，那么该函数就会一直等待（相当于阻塞当前线程）\n\n* 直到该函数等待的信号量的值大于等于1，该函数会对信号量的值进行-1操作，然后返回。\n\n*/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_semaphore_t  _Nonnull dsema"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_time_t timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送信号量。该函数会对信号量的值进行+1操作")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_signal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_semaphore_t  _Nonnull dsema"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ul",[s("li",[s("p",[t._v("同步→当锁")])]),t._v(" "),s("li",[s("p",[t._v("控制GCD最大并发数")])])]),t._v(" "),s("h2",{attrs:{id:"调度组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调度组"}},[t._v("#")]),t._v(" 调度组")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建调度组")]),t._v("\n\ndispatch_group_t group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进组任务")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_group_t  _Nonnull group"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_queue_t  _Nonnull queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进组任务执行完毕通知")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_group_t  _Nonnull group"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_queue_t  _Nonnull queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进组任务执行等待时间")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_group_t  _Nonnull group"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_time_t timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进组")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_enter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_group_t  _Nonnull group#"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出组")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_leave")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dispatch_group_t  _Nonnull group"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("注意搭配使用")]),t._v(" "),s("ul",[s("li",[t._v("进组和出组-成对，先进后出")])]),t._v(" "),s("h2",{attrs:{id:"dispatch-source-t"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-source-t"}},[t._v("#")]),t._v(" dispatch_source_t")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建源")]),t._v("\n\ndispatch_source_create\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置源事件回调")]),t._v("\n\ndispatch_source_set_event_handler\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 源事件设置数据")]),t._v("\n\ndispatch_source_merge_data\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取源事件数据")]),t._v("\n\ndispatch_source_get_data\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继续")]),t._v("\n\ndispatch_resume\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//挂起")]),t._v("\n\ndispatch_suspend\n\n")])])]),s("ul",[s("li",[s("p",[t._v("CPU负荷非常小，尽量不占用资源")])]),t._v(" "),s("li",[s("p",[t._v("多用于Timer")])]),t._v(" "),s("li",[s("p",[t._v("通过一个条件，来控制任务block是否能执行，并且这个条件可以不断变化")])])]),t._v(" "),s("h2",{attrs:{id:"应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),s("p",[t._v("我们知道可变数组是线程不安全的，那么学习了以上四种方案，尝试解决一下可变数组的线程安全问题。")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("\ndispatch_queue_t concurrentQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_queue_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"concurrent"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\nDISPATCH_QUEUE_CONCURRENT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("concurrentQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n···\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原始代码（同一时间对同一片内存空间进行操作，不安全）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mutableArray addObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  \n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方案1: 栅栏")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_barrier_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("concurrentQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mutableArray addObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  \n\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);